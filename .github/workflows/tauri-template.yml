name: Tauri CI

on:
  workflow_call:
    inputs:
      buildStage:
        required: true
        type: string
        description: "构建阶段"
      nodeVersion:
        required: false
        type: string
        default: "latest"
        description: "Node 版本"
      buildFeishuWebhook:
        required: false
        type: string
        description: "用于通知编译进程的 webhook 地址"
      releaseFeishuWebhook:
        required: false
        type: string
        description: "构建成功后用于通知发布的 webhook 地址"

    secrets:
      ossAccessKey:
        required: false
        description: "OSS Access Key"
      ossAccessKeySecret:
        required: false
        description: "OSS Secret Key"
      tauriPrivateKey:
        required: true
        description: "Tauri Private Key"
      tauriKeyPassword:
        required: true
        description: "Tauri Key Password"

jobs:
  build-tauri:
    outputs:
      project-info: ${{ steps.product-info.outputs.result }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos"
            os: "macos"
            arch: "aarch64"
            args: "-target aarch64-apple-darwin"
          # - platform: "rust-windows"
          #   os: "windows"
          #   arch: "x86_64"
          #   args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout code (检出代码)
        uses: actions/checkout@v4

      - name: Get Product Info
        id: product-info
        uses: actions/script@v7
        with:
          script: |
            const fs = require('fs')
            const path = require('path')
            const execSync = require('child_process').execSync

            const version = require('./package.json').version
            const productName = require('./src-tauri/tauri.conf.json').package.productName
            const productNameLower = productName.replace(/\s/g, '_').toLowerCase()

            console.log(`version: ${version ? version : '未找到'}`)
            console.log(`productName: ${productName ? productName : '未找到'}`)
            console.log(`productNameLower: ${productNameLower ? productNameLower : '未找到'}`)

            const result = {
              version: version,
              productName: productName,
              productNameLower: productNameLower
            }

            return result

      - name: Post Message (发送飞书 Webhook 消息)
        uses: foxundermoon/feishu-action@v2
        if: ${{ inputs.buildFeishuWebhook }}
        with:
          url: ${{ inputs.buildFeishuWebhook }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ fromJson(steps.product-info.outputs.result).productName }} 开始构建
                content:
                - - tag: text
                    un_escape: true
                    text: '版本: ${{ fromJson(steps.product-info.outputs.result).version }}'
                - - tag: text
                    un_escape: true
                    text: '环境: ${{ inputs.buildStage }}'
                - - tag: text
                    un_escape: true
                    text: '平台: ${{ matrix.os }}'
                - - tag: text
                    text: '部署链接: '
                  - tag: a
                    text: github action
                    href: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Setup Rust (设置 Rust 版本)
        if: matrix.platform == 'macos'
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: "aarch64-apple-darwin,x86_64-apple-darwin"

      - name: Setup pnpm (安装 pnpm)
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup node (设置 node 版本)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.nodeVersion }}

      - name: Install frontend dependencies (安装前端依赖)
        run: pnpm i

      - name: Build tauri (构建 tauri)
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.tauriPrivateKey }}
          TAURI_KEY_PASSWORD: ${{ secrets.tauriKeyPassword }}
        with:
          args: ${{ matrix.args }}

      - name: Upload Artifact (上传构建产物)
        if: success() && matrix.platform == 'macos'
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: macos-bundle
          path: ${{ github.workspace }}/src-tauri/target/release/bundle/macos/

      - name: Post Message (发送飞书 Webhook 消息)
        uses: foxundermoon/feishu-action@v2
        if: success() && ${{ inputs.releaseFeishuWebhook }}
        with:
          url: ${{ inputs.buildFeishuWebhook }}
          msg_type: post
          content: |
            post:
              zh_cn:
                title: ${{ fromJson(steps.product-info.outputs.result).productName }} 构建完成
                content:
                - - tag: text
                    un_escape: true
                    text: '版本: ${{ fromJson(steps.product-info.outputs.result).version }}'
                - - tag: text
                    un_escape: true
                    text: '环境: ${{ inputs.buildStage }}'
                - - tag: text
                    un_escape: true
                    text: '平台: ${{ matrix.os }}'
                - - tag: text
                    text: '下载链接: '
                  - tag: a
                    text: github action
                    href: https://ipoasis-pic.s3.amazonaws.com/${{ fromJson(steps.product-info.outputs.result).productNameLower }}/${{ fromJson(steps.product-info.outputs.result).productNameLower }}-${{ matrix.os }}-${{fromJson(steps.product-info.outputs.result).version }}-${{ inputs.buildStage }}.tar.gz

  # publish-release:
  #   permissions:
  #     contents: write
  #   runs-on: [self-hosted, linux]
  #   needs: [build-tauri]
  #   steps:
  #     - name: Checkout code (检出代码)
  #       uses: actions/checkout@v4

  #     - name: Setup node (设置 node 版本)
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: "20"

  #     - name: Setup yarn (安装 yarn)
  #       run: npm install -g pnpm

  #     - name: Run script
  #       run: pnpm install && pnpm updater
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         VERSION: ${{ needs.create-release.outputs.version }}
  #         RELEASE_ID: ${{ needs.create-release.outputs.release_id }}

  #     - name: Upload to S3
  #       uses: keithweaver/aws-s3-github-action@v1.0.0
  #       with:
  #         command: cp
  #         source: ./releases/
  #         destination: s3://ipoasis-pic/proxy_tester/${{ needs.create-release.outputs.version }}/
  #         aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_MAIN }}
  #         aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_MAIN }}
  #         aws_region: us-east-1
  #         flags: --acl public-read --recursive

  #     - name: deploy install.json (部署 install.json)
  #       uses: peaceiris/actions-gh-pages@v3
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}
  #         publish_dir: ./updater
  #         force_orphan: true

  #     - name: Post Message (发送飞书 Webhook 消息)
  #       uses: foxundermoon/feishu-action@v2
  #       with:
  #         url: ${{ secrets.webhookFeishu }}
  #         msg_type: post
  #         content: |
  #           post:
  #             zh_cn:
  #               title: ${{ inputs.projectName }} 发布完成
  #               content:
  #               - - tag: text
  #                   un_escape: true
  #                   text: '版本: v${{ needs.create-release.outputs.version }}'
  #               - - tag: text
  #                   text: '版本信息: '
  #                 - tag: a
  #                   text: install.json
  #                   href: https://reversegame.github.io/proxy-tester/install.json
